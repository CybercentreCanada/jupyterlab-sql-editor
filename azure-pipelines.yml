trigger:
  branches:
    include:
      - main

pool: 'cybertron-build-pool'

variables:
  tag: '$(Build.BuildId)'

stages:
  - stage: Build_and_Publish_Python_Artifact
    displayName: Build, package and publish python artifacts.
    jobs:
      - job: BuildPythonArtifact
        displayName: Build and package python artifacts.
        strategy:
          matrix:
            Python:
              python.version: '3.11'

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'

          - script: |
              virtualenv -p python$(python.version) env
              source env/bin/activate
              python -m pip install -U "jupyterlab>=4.0.0,<5"
            displayName: 'Install dependencies'

          - script: |
              set -eux
              source env/bin/activate
              jlpm
              jlpm run lint:check
            displayName: 'Lint the extension'

          - script: |
              set -eux
              source env/bin/activate
              python -m pip install -v .[all]
            displayName: 'Build the extension'

          - script: |
              set -eux

              echo '.$(tag)' >> version.txt
              source env/bin/activate
              pip install build
              python -m build
            displayName: 'Package the extension'

          - task: CopyFiles@2
            inputs:
              contents: 'dist/**'
              targetFolder: $(Build.ArtifactStagingDirectory)
            displayName: 'Stage build artifact to publish'

          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)/dist'
              artifactName: 'dist'
              publishLocation: 'Container'
            displayName: 'Publish build artifacts'

      - job: PublishArtifactToAPAFeed
        displayName: Publish artifact to APA feed
        dependsOn: BuildPythonArtifact
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'specific'
              downloadPath: '$(Pipeline.Workspace)'
            displayName: 'Download build artifact'

          - task: TwineAuthenticate@1
            inputs:
              artifactFeed: Analytical Platform/analytical-platform
            displayName: 'Twine Authenticate'

          - script: |
              virtualenv -p python$(python.version) env
              source env/bin/activate
              pip install twine
              python -m twine upload --skip-existing -r analytical-platform --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/dist/* --verbose
            displayName: 'Publish artifact to analytical-platform feed'

      - job: PublishArtifactToBoHFeed
        displayName: Publish artifact to BoH feed
        dependsOn: BuildPythonArtifact
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'specific'
              downloadPath: '$(Pipeline.Workspace)'
            displayName: 'Download build artifact'

          - task: TwineAuthenticate@1
            inputs:
              pythonUploadServiceConnection: pypi-bagofholding
            displayName: 'Twine Authenticate'

          - script: |
              virtualenv -p python$(python.version) env
              source env/bin/activate
              pip install twine
              python -m twine upload --skip-existing -r pypi-bagofholding --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/dist/* --verbose
            displayName: 'Publish artifact to BoH feed'

      - job: PublishArtifactToPypi
        displayName: Publish artifact to PyPI
        dependsOn: BuildPythonArtifact
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'specific'
              downloadPath: '$(Pipeline.Workspace)'
            displayName: 'Download build artifact'

          - task: TwineAuthenticate@1
            inputs:
              pythonUploadServiceConnection: cccs-pypi
            displayName: 'Twine Authenticate'

          - script: |
              virtualenv -p python$(python.version) env
              source env/bin/activate
              pip install twine
              python -m twine upload --skip-existing -r "cccs-pypi" --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/dist/* --verbose
            displayName: 'Publish artifact to PyPI'
