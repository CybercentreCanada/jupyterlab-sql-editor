trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build_and_Publish_Python_Artifact
  displayName: Build, package and publish python artifacts.
  jobs:
  - job: BuildPythonArtifact
    displayName: Build and package python artifacts.
    strategy:
      matrix:
        Python38:
          python.version: '3.10'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'
    - script: |
        pip install wheel build jupyterlab cookiecutter nodejs jupyter-packaging
      displayName: 'Install deps'
    - script: |
        pip install -ve .
        jlpm install
      displayName: 'install npm modules'
    - script: |
        jlpm run build
      displayName: 'Build lab extension'
    - script: |
        echo '.$(tag)' >> version.txt
        python -m build
      displayName: 'Build artifact'
    - task: CopyFiles@2
      inputs:
        targetFolder: $(Build.ArtifactStagingDirectory)
      displayName: 'Stage build artifact to publish'
    - task: PublishBuildArtifacts@1
      displayName: Publish build artifacts
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/dist'
        artifactName: 'dist'
        publishLocation: 'Container'
  - job: PublishArtifactToFeedArtifact
    dependsOn: BuildPythonArtifact
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: '$(Pipeline.Workspace)'
      displayName: 'Download build artifact.'
    - task: TwineAuthenticate@1
      inputs:
        artifactFeed: Analytical Platform/analytical-platform
    - script: |
        pip install twine
        python -m twine upload --skip-existing -r analytical-platform --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/dist/*
      displayName: 'Publish artifact to analytical-platform feed.'
  - job: PublishArtifactToPypi
    dependsOn: BuildPythonArtifact
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: '$(Pipeline.Workspace)'
      displayName: 'Download build artifact.'
    - task: TwineAuthenticate@1
      inputs:
        pythonUploadServiceConnection: cccs-pypi
    - script: |
        pip install twine
        python -m twine upload --skip-existing -r "cccs-pypi" --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/dist/* --verbose
      displayName: 'Publish artifact to PyPI.'
